{
  "id": "frontend_api_integration",
  "title": "API Integration",
  "description": "Practice talking about how you fetch and handle data from APIs in frontend projects.",
  "level": "B2",
  "user_content": {
    "goals": [
      {
        "phrase": "Describe how you fetch data from APIs in frontend projects",
        "translation": {
          "uk": "Описати, як ви отримуєте дані з API у фронтенд-проєктах"
        }
      },
      {
        "phrase": "Explain where and how you call APIs in your components or logic",
        "translation": {
          "uk": "Пояснити, де і як ви викликаєте API у компонентах або логіці"
        }
      },
      {
        "phrase": "Mention how you handle loading, errors, and data states",
        "translation": {
          "uk": "Згадати, як ви обробляєте стани завантаження, помилок і даних"
        }
      }
    ],
    "dictionary": [
      {
        "word": "fetch",
        "translation": { "uk": "fetch" },
        "meaning": "A built-in method to request data from a server"
      },
      {
        "word": "axios",
        "translation": { "uk": "axios" },
        "meaning": "A popular library for making HTTP requests"
      },
      {
        "word": "side effect",
        "translation": { "uk": "побічна дія (side effect)" },
        "meaning": "An action like an API call or data mutation that affects something outside the function"
      },
      {
        "word": "error handling",
        "translation": { "uk": "обробка помилок" },
        "meaning": "Managing failures when an API call doesn’t succeed"
      },
      {
        "word": "loading state",
        "translation": { "uk": "стан завантаження" },
        "meaning": "UI indication that data is being fetched"
      }
    ],
    "phrases": [
      {
        "phrase": "I usually fetch data using either fetch or axios depending on the project setup.",
        "translation": {
          "uk": "Я зазвичай отримую дані через fetch або axios залежно від проєкту."
        },
        "meaning": "Explains tool usage"
      },
      {
        "phrase": "I keep my API calls outside components in a separate service file.",
        "translation": {
          "uk": "Я зберігаю API-виклики поза компонентами, у окремому файлі-сервісі."
        },
        "meaning": "Used to describe a separation of concerns"
      },
      {
        "phrase": "I use useEffect to call the API when the component mounts.",
        "translation": {
          "uk": "Я використовую useEffect, щоб викликати API під час монтування компонента."
        },
        "meaning": "Describes a typical React pattern"
      },
      {
        "phrase": "I show a loading spinner while waiting for data and handle errors with try-catch or catch blocks.",
        "translation": {
          "uk": "Я показую індикатор завантаження під час очікування даних і обробляю помилки через try-catch або catch."
        },
        "meaning": "Used to describe good UX and error handling"
      }
    ]
  },
  "model_behavior": {
    "prompt": "You are a frontend interviewer asking about how the candidate works with APIs. Focus on their ability to describe how, where, and why they make API calls and how they handle states.",
    "scenario": {
      "setting": "Technical interview",
      "situation": "You are evaluating the candidate's understanding of API usage and integration in frontend apps",
      "goal": "Let the user explain their habits around API calls, data fetching, state handling, and separation of concerns",
      "steps": ["How do you usually fetch data from an API in your frontend projects?", "Where do you place API calls — inside components or elsewhere?"],
      "optional_steps": [
        "What tools or methods do you use to make API requests — fetch, axios, or others?",
        "How do you handle loading and error states when working with external data?",
        "Do you keep API logic inside the UI code or move it to a separate layer or module?",
        "How do you make sure your API calls don’t block or slow down the UI?",
        "Do you cache API results, and if so — how and where?",
        "How do you manage repeated or polling requests (e.g., re-fetching or intervals)?",
        "What’s your approach to transforming or validating API responses before using them?",
        "Have you worked with paginated APIs or implemented infinite scrolling?",
        "How do you deal with inconsistent or unreliable backend responses?",
        "What strategies do you use to avoid duplicated API calls in large applications?"
      ]
    }
  },
  "meta": {
    "estimated_duration_minutes": 6,
    "max_turns": 10,
    "question_count_range": {
      "min": 2,
      "max": 4
    },
    "model_end_behavior": "Great job! You’ve finished this scenario. Feel free to check the analysis and see how you performed.",
    "target_language": "English",
    "explanation_language": "Ukrainian"
  }
}
