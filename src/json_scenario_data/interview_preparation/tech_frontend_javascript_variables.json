{
  "id": "frontend_javascript_variables",
  "module": "interview_tech_frontend_basics",
  "title": "JavaScript Variables",
  "description": "Talk about how you use variables in JavaScript, what the differences are between var, let, and const, and how you manage state in your code.",
  "level": "B1",
  "user_content": {
    "goals": [
      {
        "phrase": "Explain the difference between var, let, and const, and how they behave in different scopes",
        "translation": {
          "uk": "Пояснити різницю між var, let і const та як вони поводяться в різних областях видимості"
        }
      },
      {
        "phrase": "Describe how JavaScript handles variable declarations, including hoisting and reassignment",
        "translation": {
          "uk": "Описати, як JavaScript обробляє оголошення змінних, включаючи hoisting та переприсвоєння"
        }
      },
      {
        "phrase": "Identify common pitfalls when working with variables in JavaScript",
        "translation": {
          "uk": "Назвати поширені помилки під час роботи зі змінними в JavaScript"
        }
      }
    ],
    "dictionary": [
      {
        "word": "variable scope",
        "translation": { "uk": "область видимості змінної" },
        "meaning": "Where in the code a variable can be accessed"
      },
      {
        "word": "hoisting",
        "translation": { "uk": "підняття (hoisting)" },
        "meaning": "The behavior of moving variable declarations to the top of the scope"
      },
      {
        "word": "block scope",
        "translation": { "uk": "блочна область видимості" },
        "meaning": "Variables only accessible inside a specific block of code, like with let or const"
      },
      {
        "word": "reassignment",
        "translation": { "uk": "переприсвоєння" },
        "meaning": "Changing the value of a variable after it's been defined"
      },
      {
        "word": "immutable",
        "translation": { "uk": "незмінний" },
        "meaning": "A value that cannot be changed after it is created, often associated with const"
      }
    ],
    "phrases": [
      {
        "phrase": "I usually use const for values that don’t change.",
        "translation": {
          "uk": "Я зазвичай використовую const для значень, які не змінюються."
        },
        "meaning": "Used to explain preference for constant declarations"
      },
      {
        "phrase": "Let is useful when I need to reassign a variable later.",
        "translation": {
          "uk": "Let зручний, коли потрібно пізніше змінити значення змінної."
        },
        "meaning": "Used to justify usage of let"
      },
      {
        "phrase": "I avoid using var because it can lead to bugs due to hoisting.",
        "translation": {
          "uk": "Я уникаю var, бо він може спричинити баги через hoisting."
        },
        "meaning": "Used to describe a common mistake or risky practice"
      },
      {
        "phrase": "It’s important to understand scope when working with variables.",
        "translation": {
          "uk": "Важливо розуміти область видимості при роботі зі змінними."
        },
        "meaning": "Used to emphasize a key concept in JS variable behavior"
      }
    ]
  },
  "model_behavior": {
    "prompt": "You are a technical interviewer focusing on JavaScript basics. Ask the user to explain how they use variables, including scope, const vs let, and common mistakes.",
    "scenario": {
      "setting": "Technical screening call",
      "situation": "You are evaluating a candidate’s understanding of variable declarations in JavaScript",
      "goal": "Let the user demonstrate their ability to talk clearly about basic JavaScript variable usage and concepts",
      "steps": ["Can you explain the difference between var, let, and const?", "When do you choose const over let in your projects?"],
      "optional_steps": [
        "What does 'hoisting' mean in JavaScript?",
        "Can you give an example of block scope?",
        "What’s the risk of using var instead of let?",
        "Do you use global variables? Why or why not?",
        "How do you usually manage variables inside a function?",
        "Can const variables ever be changed?",
        "How do you keep your code clean and avoid accidental reassignment?"
      ]
    }
  },
  "meta": {
    "estimated_duration_minutes": 5,
    "max_turns": 8,
    "question_count_range": {
      "min": 3,
      "max": 5
    },
    "model_end_behavior": "Give feedback on their explanation and move to the next topic.",
    "target_language": "English",
    "explanation_language": "Ukrainian"
  }
}
